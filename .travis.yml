language: rust
sudo: required
services:
  - docker


rust:
  - stable
  - nightly


addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev



env:
  - GREMLIN_SERVER=3.4.5
  - GREMLIN_SERVER=3.4.6


matrix:
  allow_failures:
    - rust: nightly

before_install:
  - rustup component add rustfmt
  - cargo fmt --all -- --check

script:
  - cd gremlin-client
  - cargo test --features=async-std-runtime
  - cargo test --features=tokio-runtime
  - cd ../

before_script:
  - docker-compose -f docker-compose/docker-compose.yaml up -d 

after_script:
  - docker-compose -f docker-compose/docker-compose.yml down --remove-orphans


after_success: |
  wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
  tar xzf master.tar.gz &&
  cd kcov-master &&
  mkdir build &&
  cd build &&
  cmake .. &&
  make &&
  make install DESTDIR=../../kcov-build &&
  cd ../.. &&
  rm -rf kcov-master &&
  for file in target/debug/gremlin_client-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  for file in target/debug/integration_client-*; do [ -x "${file}" ] || continue; mkdir -p "target/cov/$(basename $file)"; ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
  bash <(curl -s https://codecov.io/bash) &&
  echo "Uploaded code coverage"
